{"ast":null,"code":"import { MessageService } from 'primeng/api'; // Pour les messages/toasts\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/project-assignment.service\";\nimport * as i2 from \"../_services/user.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"primeng/api\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"primeng/toast\";\nfunction AssignProjectsComponent_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", user_r2.username, \" \");\n  }\n}\nfunction AssignProjectsComponent_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const project_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", project_r3.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", project_r3.nomProjet, \" \");\n  }\n}\nlet AssignProjectsComponent = /*#__PURE__*/(() => {\n  class AssignProjectsComponent {\n    constructor(projectAssignmentService, userService, router, messageService // Pour les messages/toasts\n    ) {\n      this.projectAssignmentService = projectAssignmentService;\n      this.userService = userService;\n      this.router = router;\n      this.messageService = messageService;\n      // Propriétés pour stocker les utilisateurs, projets, et autres données\n      this.users = [];\n      this.projects = [];\n      this.selectedProjectIds = [];\n      this.toastMessage = ''; // Pour afficher des messages toast\n    }\n\n    ngOnInit() {\n      // Charger les utilisateurs et gérer les erreurs\n      this.userService.getAllUsers().subscribe(response => {\n        this.users = response;\n      }, error => {\n        this.showError('Error fetching users', 'Please try again later.');\n      });\n      // Charger les projets et gérer les erreurs\n      this.userService.getAllProjects().subscribe(response => {\n        this.projects = response;\n      }, error => {\n        this.showError('Error fetching projects', 'Please try again later.');\n      });\n    }\n    assignProjects() {\n      if (!this.isFormValid()) {\n        this.showError('Invalid Form', 'Please ensure all fields are filled.');\n        return;\n      }\n      // Envoyer la requête pour assigner des projets\n      this.projectAssignmentService.assignProjectsToUser(this.selectedUserId, this.selectedProjectIds, this.startDate, this.endDate).subscribe({\n        next: response => {\n          this.showSuccess(\"Projects assigned successfully!\");\n          this.router.navigate(['/success']); // Naviguer vers une page de succès\n        },\n\n        error: error => {\n          this.showError('Error assigning projects', 'Please try again later.');\n        }\n      });\n    }\n    // Afficher un message toast de succès\n    showSuccess(message) {\n      this.messageService.add({\n        severity: 'success',\n        summary: 'Success',\n        detail: message\n      });\n    }\n    // Afficher un message toast d'erreur\n    showError(summary, detail) {\n      this.messageService.add({\n        severity: 'error',\n        summary,\n        detail\n      });\n    }\n    // Méthode de validation pour le formulaire\n    isFormValid() {\n      return this.selectedUserId !== undefined && this.selectedProjectIds.length > 0 && this.startDate !== undefined && this.endDate !== undefined;\n    }\n    static #_ = this.ɵfac = function AssignProjectsComponent_Factory(t) {\n      return new (t || AssignProjectsComponent)(i0.ɵɵdirectiveInject(i1.ProjectAssignmentService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.MessageService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AssignProjectsComponent,\n      selectors: [[\"app-assign-projects\"]],\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 26,\n      vars: 7,\n      consts: [[1, \"container\"], [1, \"form-group\"], [\"for\", \"user\"], [\"id\", \"user\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"projects\"], [\"id\", \"projects\", \"multiple\", \"\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-text\", \"text-muted\"], [\"for\", \"startDate\"], [\"type\", \"date\", \"id\", \"startDate\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"endDate\"], [\"type\", \"date\", \"id\", \"endDate\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [3, \"value\"]],\n      template: function AssignProjectsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Assign Projects to a User\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n          i0.ɵɵtext(5, \"Select User:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"select\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function AssignProjectsComponent_Template_select_ngModelChange_6_listener($event) {\n            return ctx.selectedUserId = $event;\n          });\n          i0.ɵɵtemplate(7, AssignProjectsComponent_option_7_Template, 2, 2, \"option\", 4);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"div\", 1)(9, \"label\", 5);\n          i0.ɵɵtext(10, \"Select Projects:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"select\", 6);\n          i0.ɵɵlistener(\"ngModelChange\", function AssignProjectsComponent_Template_select_ngModelChange_11_listener($event) {\n            return ctx.selectedProjectIds = $event;\n          });\n          i0.ɵɵtemplate(12, AssignProjectsComponent_option_12_Template, 2, 2, \"option\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"small\", 7);\n          i0.ɵɵtext(14, \" Hold Ctrl (Windows) or Command (Mac) to select multiple projects. \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"div\", 1)(16, \"label\", 8);\n          i0.ɵɵtext(17, \"Start Date:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"input\", 9);\n          i0.ɵɵlistener(\"ngModelChange\", function AssignProjectsComponent_Template_input_ngModelChange_18_listener($event) {\n            return ctx.startDate = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(19, \"div\", 1)(20, \"label\", 10);\n          i0.ɵɵtext(21, \"End Date:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"input\", 11);\n          i0.ɵɵlistener(\"ngModelChange\", function AssignProjectsComponent_Template_input_ngModelChange_22_listener($event) {\n            return ctx.endDate = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(23, \"button\", 12);\n          i0.ɵɵlistener(\"click\", function AssignProjectsComponent_Template_button_click_23_listener() {\n            return ctx.assignProjects();\n          });\n          i0.ɵɵtext(24, \" Assign Projects \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(25, \"p-toast\");\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngModel\", ctx.selectedUserId);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.users);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.selectedProjectIds);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.projects);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngModel\", ctx.startDate);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.endDate);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", !ctx.isFormValid());\n        }\n      },\n      dependencies: [i5.NgForOf, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i6.DefaultValueAccessor, i6.SelectControlValueAccessor, i6.SelectMultipleControlValueAccessor, i6.NgControlStatus, i6.RequiredValidator, i6.NgModel, i7.Toast],\n      styles: [\".container[_ngcontent-%COMP%]{background-image:url(https://www.groupebcp.com/fr/PublishingImages/GBP_Filiales/BCP-BANK-MAURICE.png);background-size:cover;background-position:center;background-repeat:no-repeat}\"]\n    });\n  }\n  return AssignProjectsComponent;\n})();\nexport { AssignProjectsComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}