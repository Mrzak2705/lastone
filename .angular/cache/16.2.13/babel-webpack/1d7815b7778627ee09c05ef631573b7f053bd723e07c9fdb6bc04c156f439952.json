{"ast":null,"code":"import { ProjetRequest } from 'src/app/_services/models/projet-request';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/user.service\";\nimport * as i2 from \"../_services/project-assignment.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction AdminBoardComponent_div_26_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const mod_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", mod_r5.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(mod_r5.username);\n  }\n}\nfunction AdminBoardComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"select\", 24);\n    i0.ɵɵlistener(\"ngModelChange\", function AdminBoardComponent_div_26_Template_select_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.selectedModeratorId = $event);\n    });\n    i0.ɵɵtemplate(2, AdminBoardComponent_div_26_option_2_Template, 2, 2, \"option\", 25);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.selectedModeratorId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.moderators);\n  }\n}\nfunction AdminBoardComponent_tr_60_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const role_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", role_r10);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(role_r10);\n  }\n}\nfunction AdminBoardComponent_tr_60_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"input\", 27);\n    i0.ɵɵlistener(\"ngModelChange\", function AdminBoardComponent_tr_60_Template_input_ngModelChange_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const user_r8 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(user_r8.username = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"td\")(4, \"input\", 28);\n    i0.ɵɵlistener(\"ngModelChange\", function AdminBoardComponent_tr_60_Template_input_ngModelChange_4_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const user_r8 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(user_r8.email = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"td\")(6, \"select\", 29);\n    i0.ɵɵlistener(\"ngModelChange\", function AdminBoardComponent_tr_60_Template_select_ngModelChange_6_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const user_r8 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(user_r8.selectedRole = $event);\n    })(\"change\", function AdminBoardComponent_tr_60_Template_select_change_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const user_r8 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.updateRole(user_r8, user_r8.selectedRole));\n    });\n    i0.ɵɵtemplate(7, AdminBoardComponent_tr_60_option_7_Template, 2, 2, \"option\", 25);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"td\")(9, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function AdminBoardComponent_tr_60_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const user_r8 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.updateUser(user_r8));\n    });\n    i0.ɵɵtext(10, \"Modifier\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function AdminBoardComponent_tr_60_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const user_r8 = restoredCtx.$implicit;\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.deleteUser(user_r8));\n    });\n    i0.ɵɵtext(12, \"Supprimer\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const user_r8 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"name\", \"username\", user_r8.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", user_r8.username);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"name\", \"email\", user_r8.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", user_r8.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", user_r8.selectedRole);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.allRoles);\n  }\n}\nfunction AdminBoardComponent_tr_73_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"input\", 32);\n    i0.ɵɵlistener(\"ngModelChange\", function AdminBoardComponent_tr_73_Template_input_ngModelChange_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const project_r18 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(project_r18.nomProjet = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"td\")(4, \"input\", 33);\n    i0.ɵɵlistener(\"ngModelChange\", function AdminBoardComponent_tr_73_Template_input_ngModelChange_4_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const project_r18 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(project_r18.codeProjet = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"td\")(6, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function AdminBoardComponent_tr_73_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const project_r18 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.updateProject(project_r18));\n    });\n    i0.ɵɵtext(7, \"Modifier\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function AdminBoardComponent_tr_73_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const project_r18 = restoredCtx.$implicit;\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.deleteProject(project_r18));\n    });\n    i0.ɵɵtext(9, \"Supprimer\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const project_r18 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", project_r18.nomProjet);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", project_r18.codeProjet);\n  }\n}\nlet AdminBoardComponent = /*#__PURE__*/(() => {\n  class AdminBoardComponent {\n    constructor(userService, projectAssignmentService) {\n      this.userService = userService;\n      this.projectAssignmentService = projectAssignmentService;\n      this.users = [];\n      this.allRoles = ['ROLE_USER', 'ROLE_MODERATOR', 'ROLE_ADMIN']; // Define all possible roles\n      this.moderators = [];\n      //projetassign: any[] = [];\n      this.nomProjet = '';\n      this.codeProjet = '';\n      this.projects = [];\n      this.project = {};\n      this.selectedRole = ''; // Définir la propriété selectedRole\n    }\n\n    addProject() {\n      const projetRequest = new ProjetRequest(this.nomProjet, this.codeProjet);\n      this.userService.addProject(projetRequest).subscribe(response => {\n        console.log('Project added successfully:', response);\n        this.fetchProjects();\n      }, error => {\n        console.error('Error adding project:', error);\n      });\n    }\n    ngOnInit() {\n      /*this.userService.getAllUsers().subscribe(\n        (data) => {\n          this.users = data;\n          console.log('Users loaded:', this.users); // Afficher les utilisateurs pour vérifier les IDs\n        },\n        (error) => {\n          console.error('Error loading users:', error);\n        }\n      );\n      this.project = {};\n           this.userService.getAllProjects().subscribe(\n        (dataa) => {\n          this.projects = dataa;\n          console.log('Projects loaded:', this.projects); // Afficher les projets pour vérifier les IDs\n        },\n        (error) => {\n          console.error('Error loading Projects:', error);\n        }\n      );*/\n      this.fetchUsers();\n      this.fetchModerators();\n      this.fetchProjects();\n      //this.fetchProjectAssignments();\n    }\n\n    fetchProjects() {\n      this.userService.getAllProjects().subscribe(data => {\n        this.projects = data;\n        console.log('Projects loaded:', this.projects);\n      }, error => {\n        console.error('Error loading projects:', error);\n      });\n    }\n    /*fetchProjectAssignments() {\n      this.projectAssignmentService.getAllProjectsAssignment().subscribe(\n        data => {\n          this.projetassign = data;\n        },\n        error => {\n          console.error('Error loading project assignments:', error);\n        }\n      );\n    }*/\n    fetchModerators() {\n      this.userService.getModerators().subscribe(data => {\n        this.moderators = data;\n      }, error => {\n        console.error('Error loading moderators:', error);\n      });\n    }\n    fetchUsers() {\n      this.userService.getAllUsers().subscribe(data => {\n        this.users = data;\n        console.log('Users loaded:', this.users);\n      }, error => {\n        console.error('Error loading users:', error);\n      });\n    }\n    /*updateUserRoles(user): void {\n      console.log('Updating roles for user:', user);\n      // Fichier: src/app/board-admin/admin-board.component.ts\n    this.userService.updateUserRoles(user.id, user.roles).subscribe(\n    response => {\n      console.log('Roles updated', response);\n    },\n    error => {\n      console.error('Error updating roles', error);\n    }\n    );\n       }*/\n    updateRole(user, newRole) {\n      // Vous pouvez ajuster cette méthode pour appeler un service qui met à jour le rôle de l'utilisateur dans la base de données\n      user.roles = [newRole]; // Supposons que chaque utilisateur a un seul rôle pour simplifier\n      this.userService.updateUserRoles(user.id, user.roles).subscribe(response => {\n        console.log('Roles updated successfully');\n        // Vous pouvez choisir de recharger les données ou de confirmer visuellement la mise à jour ici\n      }, error => {\n        console.error('Error updating roles:', error);\n      });\n    }\n    updateUser(user) {\n      const userPayload = {\n        username: user.username,\n        email: user.email,\n        password: user.password,\n        roles: user.roles.map(role => ({\n          name: role\n        }))\n      };\n      this.userService.updateUser(user.id, userPayload).subscribe(response => {\n        console.log('User updated successfully', response);\n        this.fetchUsers(); // Rafraîchir la liste des utilisateurs\n      }, error => {\n        console.error('Error updating user:', error);\n      });\n    }\n    updateProject(project) {\n      const projetPayload = {\n        nomProjet: project.nomProjet,\n        codeProjet: project.codeProjet\n      };\n      this.userService.updateProject(project.id, projetPayload).subscribe(response => {\n        console.log('Project updated successfully', response);\n        this.fetchUsers(); // Rafraîchir la liste des utilisateurs\n      }, error => {\n        console.error('Error updating project:', error);\n      });\n    }\n    addUser(newUser) {\n      // Ajouter la logique pour associer le modérateur si le rôle 'ROLE_USER' est sélectionné\n      if (this.selectedRole === 'ROLE_USER' && this.selectedModeratorId) {\n        newUser.moderatorId = this.selectedModeratorId;\n      }\n      newUser.role = [this.selectedRole]; // Assurez-vous que le rôle est envoyé sous forme de tableau\n      this.userService.addUser(newUser).subscribe(response => {\n        console.log('User added successfully:', response);\n        this.fetchUsers(); // Refresh the users list\n      }, error => {\n        console.error('Error adding user:', error);\n      });\n    }\n    deleteUser(user) {\n      if (confirm(\"Are you sure to delete \" + user.username + \"?\")) {\n        this.userService.deleteUser(user.id).subscribe(response => {\n          console.log(\"User deleted successfully\", response);\n          this.fetchUsers(); // Refresh the list\n        }, error => {\n          console.error('Error deleting user:', error);\n        });\n      }\n    }\n    deleteProject(project) {\n      if (confirm(\"Are you sure to delete \" + project.codeProjet + \"?\")) {\n        this.userService.deleteProject(project.id).subscribe(response => {\n          console.log(\"Project deleted successfully\", response);\n          this.fetchProjects(); // Actualiser la liste après la suppression\n        }, error => {\n          console.error('Error deleting project:', error);\n        });\n      }\n    }\n    static #_ = this.ɵfac = function AdminBoardComponent_Factory(t) {\n      return new (t || AdminBoardComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.ProjectAssignmentService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AdminBoardComponent,\n      selectors: [[\"app-admin-board\"]],\n      decls: 74,\n      vars: 7,\n      consts: [[1, \"container\", \"mt-3\"], [1, \"mb-4\"], [3, \"ngSubmit\"], [\"addUserForm\", \"ngForm\"], [1, \"form-row\"], [1, \"col\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"username\", \"placeholder\", \"Nom d'utilisateur\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"email\", \"ngModel\", \"\", \"name\", \"email\", \"placeholder\", \"Email\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"password\", \"ngModel\", \"\", \"name\", \"password\", \"placeholder\", \"Mot de passe\", \"required\", \"\", 1, \"form-control\"], [\"ngModel\", \"\", \"name\", \"role\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"ROLE_USER\"], [\"value\", \"ROLE_MODERATOR\"], [\"value\", \"ROLE_ADMIN\"], [\"class\", \"col\", 4, \"ngIf\"], [1, \"col-auto\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [\"pour\", \"nomProjet\"], [\"type\", \"text\", \"id\", \"nomProjet\", \"name\", \"nomProjet\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"pour\", \"codeProjet\"], [\"type\", \"text\", \"id\", \"codeProjet\", \"name\", \"codeProjet\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [1, \"table\", \"table-bordered\"], [1, \"thead-dark\"], [4, \"ngFor\", \"ngForOf\"], [\"ngModel\", \"\", \"name\", \"moderatorId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [\"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"name\", \"ngModelChange\"], [\"type\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"name\", \"ngModelChange\"], [1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-danger\", 3, \"click\"], [\"type\", \"text\", \"name\", \"nomProjet\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"codeProjet\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"]],\n      template: function AdminBoardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r24 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Gestion des utilisateurs et des projets\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 1)(4, \"h4\");\n          i0.ɵɵtext(5, \"Ajouter un utilisateur\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\", 1)(7, \"h4\");\n          i0.ɵɵtext(8, \"Ajouter un utilisateur\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"form\", 2, 3);\n          i0.ɵɵlistener(\"ngSubmit\", function AdminBoardComponent_Template_form_ngSubmit_9_listener() {\n            i0.ɵɵrestoreView(_r24);\n            const _r0 = i0.ɵɵreference(10);\n            return i0.ɵɵresetView(ctx.addUser(_r0.value));\n          });\n          i0.ɵɵelementStart(11, \"div\", 4)(12, \"div\", 5);\n          i0.ɵɵelement(13, \"input\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"div\", 5);\n          i0.ɵɵelement(15, \"input\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"div\", 5);\n          i0.ɵɵelement(17, \"input\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"div\", 5)(19, \"select\", 9);\n          i0.ɵɵlistener(\"ngModelChange\", function AdminBoardComponent_Template_select_ngModelChange_19_listener($event) {\n            return ctx.selectedRole = $event;\n          });\n          i0.ɵɵelementStart(20, \"option\", 10);\n          i0.ɵɵtext(21, \"Utilisateur\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"option\", 11);\n          i0.ɵɵtext(23, \"Mod\\u00E9rateur\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"option\", 12);\n          i0.ɵɵtext(25, \"Admin\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(26, AdminBoardComponent_div_26_Template, 3, 2, \"div\", 13);\n          i0.ɵɵelementStart(27, \"div\", 14)(28, \"button\", 15);\n          i0.ɵɵtext(29, \"Ajouter\");\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(30, \"div\", 1)(31, \"h4\");\n          i0.ɵɵtext(32, \"Ajouter un projet\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(33, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function AdminBoardComponent_Template_form_ngSubmit_33_listener() {\n            return ctx.addProject();\n          });\n          i0.ɵɵelementStart(34, \"div\", 4)(35, \"div\", 5)(36, \"label\", 16);\n          i0.ɵɵtext(37, \"Nom du projet:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"input\", 17);\n          i0.ɵɵlistener(\"ngModelChange\", function AdminBoardComponent_Template_input_ngModelChange_38_listener($event) {\n            return ctx.nomProjet = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(39, \"div\", 5)(40, \"label\", 18);\n          i0.ɵɵtext(41, \"Code du projet:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(42, \"input\", 19);\n          i0.ɵɵlistener(\"ngModelChange\", function AdminBoardComponent_Template_input_ngModelChange_42_listener($event) {\n            return ctx.codeProjet = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(43, \"div\", 14)(44, \"button\", 20);\n          i0.ɵɵtext(45, \"Ajouter\");\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(46, \"h3\");\n          i0.ɵɵtext(47, \"Utilisateurs\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(48, \"table\", 21)(49, \"thead\", 22)(50, \"tr\")(51, \"th\");\n          i0.ɵɵtext(52, \"Nom d'utilisateur\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(53, \"th\");\n          i0.ɵɵtext(54, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(55, \"th\");\n          i0.ɵɵtext(56, \"R\\u00F4les\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(57, \"th\");\n          i0.ɵɵtext(58, \"Actions\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(59, \"tbody\");\n          i0.ɵɵtemplate(60, AdminBoardComponent_tr_60_Template, 13, 6, \"tr\", 23);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(61, \"h3\");\n          i0.ɵɵtext(62, \"Projets\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(63, \"table\", 21)(64, \"thead\", 22)(65, \"tr\")(66, \"th\");\n          i0.ɵɵtext(67, \"Nom Projet\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(68, \"th\");\n          i0.ɵɵtext(69, \"Code Projet\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(70, \"th\");\n          i0.ɵɵtext(71, \"Actions\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(72, \"tbody\");\n          i0.ɵɵtemplate(73, AdminBoardComponent_tr_73_Template, 10, 2, \"tr\", 23);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          const _r0 = i0.ɵɵreference(10);\n          i0.ɵɵadvance(19);\n          i0.ɵɵproperty(\"ngModel\", ctx.selectedRole);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedRole === \"ROLE_USER\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", !_r0.valid);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"ngModel\", ctx.nomProjet);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.codeProjet);\n          i0.ɵɵadvance(18);\n          i0.ɵɵproperty(\"ngForOf\", ctx.users);\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"ngForOf\", ctx.projects);\n        }\n      },\n      dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm]\n    });\n  }\n  return AdminBoardComponent;\n})();\nexport { AdminBoardComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}