{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/_services/project-assignment.service\";\nimport * as i2 from \"../_services/user.service\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"primeng/toast\";\nfunction AssignProjectsComponent_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", user_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(user_r2.username);\n  }\n}\nfunction AssignProjectsComponent_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const projet_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", projet_r3.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(projet_r3.nomProjet);\n  }\n}\nlet AssignProjectsComponent = /*#__PURE__*/(() => {\n  class AssignProjectsComponent {\n    constructor(projectAssignmentService, userService, messageService) {\n      this.projectAssignmentService = projectAssignmentService;\n      this.userService = userService;\n      this.messageService = messageService;\n      this.users = [];\n      this.projets = [];\n      this.selectedUser = null;\n      this.selectedProjectIds = [];\n    }\n    ngOnInit() {\n      this.userService.getAllUsers().subscribe(users => this.users = users);\n      this.userService.getAllProjects().subscribe(projets => this.projets = projets);\n    }\n    assignProjects() {\n      if (this.selectedUser && this.selectedProjectIds.length > 0) {\n        this.projectAssignmentService.assignProjectsToUser(this.selectedUser.id, this.selectedProjectIds).subscribe({\n          next: response => {\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Success',\n              detail: response.message\n            });\n          },\n          error: err => {\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Error',\n              detail: 'Failed to assign projects'\n            });\n          }\n        });\n      } else {\n        this.messageService.add({\n          severity: 'warn',\n          summary: 'Warning',\n          detail: 'Select a user and at least one project'\n        });\n      }\n    }\n    static #_ = this.ɵfac = function AssignProjectsComponent_Factory(t) {\n      return new (t || AssignProjectsComponent)(i0.ɵɵdirectiveInject(i1.ProjectAssignmentService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.MessageService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AssignProjectsComponent,\n      selectors: [[\"app-assign-projects\"]],\n      decls: 16,\n      vars: 4,\n      consts: [[\"position\", \"top-right\"], [\"for\", \"user\"], [\"id\", \"user\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"projects\"], [\"id\", \"projects\", \"multiple\", \"\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [3, \"ngValue\"], [3, \"value\"]],\n      template: function AssignProjectsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"p-toast\", 0);\n          i0.ɵɵelementStart(1, \"div\")(2, \"h2\");\n          i0.ɵɵtext(3, \"Assign Projects to User\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\")(5, \"label\", 1);\n          i0.ɵɵtext(6, \"Select User:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"select\", 2);\n          i0.ɵɵlistener(\"ngModelChange\", function AssignProjectsComponent_Template_select_ngModelChange_7_listener($event) {\n            return ctx.selectedUser = $event;\n          });\n          i0.ɵɵtemplate(8, AssignProjectsComponent_option_8_Template, 2, 2, \"option\", 3);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"div\")(10, \"label\", 4);\n          i0.ɵɵtext(11, \"Select Projects:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"select\", 5);\n          i0.ɵɵlistener(\"ngModelChange\", function AssignProjectsComponent_Template_select_ngModelChange_12_listener($event) {\n            return ctx.selectedProjectIds = $event;\n          });\n          i0.ɵɵtemplate(13, AssignProjectsComponent_option_13_Template, 2, 2, \"option\", 6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"button\", 7);\n          i0.ɵɵlistener(\"click\", function AssignProjectsComponent_Template_button_click_14_listener() {\n            return ctx.assignProjects();\n          });\n          i0.ɵɵtext(15, \"Assign Projects\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngModel\", ctx.selectedUser);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.users);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.selectedProjectIds);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.projets);\n        }\n      },\n      dependencies: [i4.NgForOf, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.SelectControlValueAccessor, i5.SelectMultipleControlValueAccessor, i5.NgControlStatus, i5.NgModel, i6.Toast]\n    });\n  }\n  return AssignProjectsComponent;\n})();\nexport { AssignProjectsComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}