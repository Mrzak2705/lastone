{"ast":null,"code":"import { MessageService } from 'primeng/api'; // Pour afficher des toasts/messages\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/project-assignment.service\";\nimport * as i2 from \"../_services/user.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"primeng/api\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nfunction AssignProjectsComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"div\", 12)(2, \"strong\", 13);\n    i0.ɵɵtext(3, \"Notification\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function AssignProjectsComponent_div_1_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.toastMessage = \"\");\n    });\n    i0.ɵɵtext(5, \"\\u00D7\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 15);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.toastMessage, \" \");\n  }\n}\nfunction AssignProjectsComponent_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_r5.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", user_r5.username, \" \");\n  }\n}\nfunction AssignProjectsComponent_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const projet_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", projet_r6.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", projet_r6.nomProjet, \" \");\n  }\n}\nlet AssignProjectsComponent = /*#__PURE__*/(() => {\n  class AssignProjectsComponent {\n    constructor(projectAssignmentService, userService, router, messageService // Pour afficher des toasts\n    ) {\n      this.projectAssignmentService = projectAssignmentService;\n      this.userService = userService;\n      this.router = router;\n      this.messageService = messageService;\n      this.users = [];\n      this.projects = [];\n      this.selectedProjectIds = [];\n      this.toastMessage = '';\n    }\n    ngOnInit() {\n      // Charger les utilisateurs\n      this.userService.getAllUsers().subscribe(response => {\n        this.users = response;\n      }, error => {\n        this.showError('Error fetching users', 'Please try again later.');\n      });\n      // Charger les projets\n      this.userService.getAllProjects().subscribe(response => {\n        this.projects = response;\n      }, error => {\n        this.showError('Error fetching projects', 'Please try again later.');\n      });\n    }\n    assignProjects() {\n      if (!this.selectedUserId || this.selectedProjectIds.length === 0) {\n        this.showError('Invalid Input', 'Please select a user and at least one project.');\n        return;\n      }\n      /*const requestData = {\n        projectIds: this.selectedProjectIds,\n        startDate: this.startDate,\n        endDate: this.endDate,\n      };*/\n      this.projectAssignmentService.assignProjectsToUser(this.selectedUserId, this.selectedProjectIds, this.startDate, this.endDate).subscribe({\n        next: response => {\n          this.showSuccess(\"Projects assigned successfully!\");\n          this.router.navigate(['/success']); // Naviguer vers une page de succès\n        },\n\n        error: error => {\n          this.showError('Error assigning projects', 'Please try again later.');\n        }\n      });\n    }\n    // Méthode pour afficher un message toast\n    showSuccess(message) {\n      this.toastMessage = message;\n      setTimeout(() => {\n        this.toastMessage = ''; // Réinitialise après un certain temps\n      }, 3000); // Toast disparaît après 3 secondes\n    }\n\n    showError(summary, detail) {\n      this.messageService.add({\n        severity: 'error',\n        summary,\n        detail\n      });\n    }\n    static #_ = this.ɵfac = function AssignProjectsComponent_Factory(t) {\n      return new (t || AssignProjectsComponent)(i0.ɵɵdirectiveInject(i1.ProjectAssignmentService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.MessageService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AssignProjectsComponent,\n      selectors: [[\"app-assign-projects\"]],\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 19,\n      vars: 6,\n      consts: [[\"aria-live\", \"polite\", \"aria-atomic\", \"true\", 1, \"toast-container\"], [\"class\", \"toast\", 4, \"ngIf\"], [1, \"container\"], [1, \"form-group\"], [\"for\", \"user\"], [\"id\", \"user\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"projects\"], [\"id\", \"projects\", \"multiple\", \"\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"project-help\", 1, \"form-text\", \"text-muted\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [1, \"toast\"], [1, \"toast-header\"], [1, \"mr-auto\"], [\"type\", \"button\", 1, \"ml-2\", \"mb-1\", \"close\", 3, \"click\"], [1, \"toast-body\"], [3, \"value\"]],\n      template: function AssignProjectsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, AssignProjectsComponent_div_1_Template, 8, 1, \"div\", 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"div\", 2)(3, \"h2\");\n          i0.ɵɵtext(4, \"Assign Projects to User\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n          i0.ɵɵtext(7, \"Select User:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"select\", 5);\n          i0.ɵɵlistener(\"ngModelChange\", function AssignProjectsComponent_Template_select_ngModelChange_8_listener($event) {\n            return ctx.selectedUserId = $event;\n          });\n          i0.ɵɵtemplate(9, AssignProjectsComponent_option_9_Template, 2, 2, \"option\", 6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"div\", 3)(11, \"label\", 7);\n          i0.ɵɵtext(12, \"Select Projects:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"select\", 8);\n          i0.ɵɵlistener(\"ngModelChange\", function AssignProjectsComponent_Template_select_ngModelChange_13_listener($event) {\n            return ctx.selectedProjectIds = $event;\n          });\n          i0.ɵɵtemplate(14, AssignProjectsComponent_option_14_Template, 2, 2, \"option\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"small\", 9);\n          i0.ɵɵtext(16, \" Hold Ctrl (Windows) or Command (Mac) to select multiple projects. \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(17, \"button\", 10);\n          i0.ɵɵlistener(\"click\", function AssignProjectsComponent_Template_button_click_17_listener() {\n            return ctx.assignProjects();\n          });\n          i0.ɵɵtext(18, \" Assign Projects \");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.toastMessage);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngModel\", ctx.selectedUserId);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.users);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.selectedProjectIds);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.projects);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"disabled\", !ctx.isFormValid());\n        }\n      },\n      dependencies: [i5.NgForOf, i5.NgIf, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i6.SelectControlValueAccessor, i6.SelectMultipleControlValueAccessor, i6.NgControlStatus, i6.RequiredValidator, i6.NgModel]\n    });\n  }\n  return AssignProjectsComponent;\n})();\nexport { AssignProjectsComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}