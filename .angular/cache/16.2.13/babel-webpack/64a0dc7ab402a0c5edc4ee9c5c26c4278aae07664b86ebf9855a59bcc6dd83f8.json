{"ast":null,"code":"import { MessageService } from 'primeng/api'; // Pour les messages/toasts\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/project-assignment.service\";\nimport * as i2 from \"../_services/user.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"primeng/api\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"primeng/toast\";\nfunction AssignProjectsComponent_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_r3.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", user_r3.username, \" \");\n  }\n}\nfunction AssignProjectsComponent_option_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const project_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", project_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", project_r4.nomProjet, \" \");\n  }\n}\nfunction AssignProjectsComponent_tr_49_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"input\", 25);\n    i0.ɵɵlistener(\"ngModelChange\", function AssignProjectsComponent_tr_49_Template_input_ngModelChange_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const assignment_r5 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(assignment_r5.userName = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"td\")(4, \"input\", 25);\n    i0.ɵɵlistener(\"ngModelChange\", function AssignProjectsComponent_tr_49_Template_input_ngModelChange_4_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const assignment_r5 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(assignment_r5.projectName = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"td\")(6, \"input\", 26);\n    i0.ɵɵlistener(\"ngModelChange\", function AssignProjectsComponent_tr_49_Template_input_ngModelChange_6_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const assignment_r5 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(assignment_r5.startDate = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"td\")(8, \"input\", 26);\n    i0.ɵɵlistener(\"ngModelChange\", function AssignProjectsComponent_tr_49_Template_input_ngModelChange_8_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const assignment_r5 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(assignment_r5.endDate = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function AssignProjectsComponent_tr_49_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const assignment_r5 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.updateAssignment(assignment_r5));\n    });\n    i0.ɵɵelement(11, \"i\", 28);\n    i0.ɵɵtext(12, \" Modifier \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function AssignProjectsComponent_tr_49_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const assignment_r5 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.deleteAssignment(assignment_r5));\n    });\n    i0.ɵɵelement(14, \"i\", 30);\n    i0.ɵɵtext(15, \" Supprimer \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const assignment_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", assignment_r5.userName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", assignment_r5.projectName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", assignment_r5.startDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", assignment_r5.endDate);\n  }\n}\nlet AssignProjectsComponent = /*#__PURE__*/(() => {\n  class AssignProjectsComponent {\n    constructor(projectAssignmentService, userService, router, messageService // Pour les messages/toasts\n    ) {\n      this.projectAssignmentService = projectAssignmentService;\n      this.userService = userService;\n      this.router = router;\n      this.messageService = messageService;\n      // Propriétés pour stocker les utilisateurs, projets, et autres données\n      this.users = [];\n      this.projects = [];\n      this.selectedProjectIds = [];\n      this.toastMessage = ''; // Pour afficher des messages toast\n      this.allAssignments = [];\n      this.project = {};\n    }\n    ngOnInit() {\n      // Charger les utilisateurs et gérer les erreurs\n      this.userService.getAllUsers().subscribe(response => {\n        this.users = response;\n      }, error => {\n        this.showError('Error fetching users', 'Please try again later.');\n      });\n      // Charger les projets et gérer les erreurs\n      this.userService.getAllProjects().subscribe(response => {\n        this.projects = response;\n      }, error => {\n        this.showError('Error fetching projects', 'Please try again later.');\n      });\n      this.loadAssignments();\n    }\n    assignProjects() {\n      console.log(\"Assigning projects:\", this.selectedUserId, this.selectedProjectIds, this.startDate, this.endDate); // Log les données avant l'envoi\n      this.projectAssignmentService.assignProjectsToUser(this.selectedUserId, this.selectedProjectIds, this.startDate, this.endDate).subscribe({\n        next: response => {\n          this.showSuccess(\"Projects assigned successfully!\");\n          this.router.navigate(['/affectation']);\n          this.loadAssignments();\n        },\n        error: error => {\n          console.error(\"Assign Projects Error:\", error); // Log l'erreur pour déboguer\n          this.showError('Error assigning projects', 'Please try again later.');\n        }\n      });\n    }\n    loadAssignments() {\n      this.projectAssignmentService.getAllAssignedProjects().subscribe(assignments => {\n        console.log(\"Loaded assignments:\", assignments); // Vérifiez ici si les objets contiennent des id\n        this.allAssignments = assignments;\n      }, error => {\n        console.error(\"Error loading assignments:\", error);\n      });\n    }\n    // Afficher un message toast de succès\n    showSuccess(message) {\n      this.messageService.add({\n        severity: 'success',\n        summary: 'Success',\n        detail: message\n      });\n    }\n    // Afficher un message toast d'erreur\n    showError(summary, detail) {\n      this.messageService.add({\n        severity: 'error',\n        summary,\n        detail\n      });\n    }\n    isFormValid() {\n      return this.selectedUserId !== undefined && this.selectedProjectIds.length > 0 && this.startDate !== undefined && this.endDate !== undefined; // Ajoutez des vérifications pour des valeurs valides\n    }\n    // Méthode pour supprimer un projet assigné\n    deleteAssignment(assignment) {\n      console.log(\"Assignment ID:\", assignment.projectName); // Vérifiez si l'identifiant est bien défini\n      if (assignment.id && confirm(\"Are you sure you want to delete assignment with ID: \" + assignment.id + \"?\")) {\n        this.projectAssignmentService.deleteAssignment(assignment.id).subscribe(response => {\n          console.log(\"Assignment deleted successfully\");\n          this.loadAssignments(); // Rechargez les assignments\n        }, error => {\n          console.error(\"Error deleting assignment:\", error);\n        });\n      } else {\n        console.error(\"Assignment ID is undefined, cannot delete.\");\n      }\n    }\n    updateAssignment(assignment) {\n      const updatedAssignment = {\n        projectId: assignment.projectId,\n        userId: assignment.userId,\n        startDate: assignment.startDate,\n        endDate: assignment.endDate\n      };\n      this.projectAssignmentService.updateAssignment(assignment.id, updatedAssignment).subscribe({\n        next: response => {\n          console.log(\"Assignment updated successfully!\");\n          this.loadAssignments();\n        },\n        error: error => {\n          if (error.status === 404) {\n            console.error(\"Assignment not found. Check if the assignment ID is correct.\");\n          } else {\n            console.error(\"Error updating assignment:\", error);\n          }\n        }\n      });\n    }\n    static #_ = this.ɵfac = function AssignProjectsComponent_Factory(t) {\n      return new (t || AssignProjectsComponent)(i0.ɵɵdirectiveInject(i1.ProjectAssignmentService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.MessageService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AssignProjectsComponent,\n      selectors: [[\"app-assign-projects\"]],\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 51,\n      vars: 8,\n      consts: [[1, \"container-fluid\", \"page\"], [1, \"d-flex\", \"page__box\", \"p-3\", \"mt-2\"], [1, \"page__content\", \"shadow\", \"p-3\", \"position-relative\"], [1, \"page__content-data\", \"position-absolute\", \"text-center\"], [1, \"container-fluid\", \"bg-light\", 2, \"padding\", \"20px\"], [1, \"card\", \"shadow-lg\", 2, \"background\", \"rgba(255, 255, 255, 0.85)\"], [1, \"card-body\"], [1, \"text-center\", \"text-warning\", \"mb-4\"], [1, \"form-group\"], [\"for\", \"user\"], [\"id\", \"user\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"projects\"], [\"id\", \"projects\", \"multiple\", \"\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-text\", \"text-muted\"], [\"for\", \"startDate\"], [\"type\", \"date\", \"id\", \"startDate\", \"required\", \"\", 1, \"form-control\", \"border-secondary\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"endDate\"], [\"type\", \"date\", \"id\", \"endDate\", \"required\", \"\", 1, \"form-control\", \"border-secondary\", 3, \"ngModel\", \"ngModelChange\"], [1, \"text-center\"], [1, \"btn\", 2, \"background-color\", \"#ff7f00\", \"color\", \"white\", 3, \"disabled\", \"click\"], [1, \"table\", \"table-bordered\"], [1, \"thead-dark\"], [4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [\"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"fas\", \"fa-edit\"], [1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"fas\", \"fa-trash-alt\"]],\n      template: function AssignProjectsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵtext(2, \"Dashboard\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"div\", 5)(7, \"div\", 6)(8, \"h2\", 7);\n          i0.ɵɵtext(9, \"Assign Projects to a User\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\", 8)(11, \"label\", 9);\n          i0.ɵɵtext(12, \"Select User:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"select\", 10);\n          i0.ɵɵlistener(\"ngModelChange\", function AssignProjectsComponent_Template_select_ngModelChange_13_listener($event) {\n            return ctx.selectedUserId = $event;\n          });\n          i0.ɵɵtemplate(14, AssignProjectsComponent_option_14_Template, 2, 2, \"option\", 11);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"div\", 8)(16, \"label\", 12);\n          i0.ɵɵtext(17, \"Select Projects:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"select\", 13);\n          i0.ɵɵlistener(\"ngModelChange\", function AssignProjectsComponent_Template_select_ngModelChange_18_listener($event) {\n            return ctx.selectedProjectIds = $event;\n          });\n          i0.ɵɵtemplate(19, AssignProjectsComponent_option_19_Template, 2, 2, \"option\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"small\", 14);\n          i0.ɵɵtext(21, \" Hold Ctrl (Windows) or Command (Mac) to select multiple projects. \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(22, \"div\", 8)(23, \"label\", 15);\n          i0.ɵɵtext(24, \"Start Date:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"input\", 16);\n          i0.ɵɵlistener(\"ngModelChange\", function AssignProjectsComponent_Template_input_ngModelChange_25_listener($event) {\n            return ctx.startDate = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(26, \"div\", 8)(27, \"label\", 17);\n          i0.ɵɵtext(28, \"End Date:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"input\", 18);\n          i0.ɵɵlistener(\"ngModelChange\", function AssignProjectsComponent_Template_input_ngModelChange_29_listener($event) {\n            return ctx.endDate = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(30, \"div\", 19)(31, \"button\", 20);\n          i0.ɵɵlistener(\"click\", function AssignProjectsComponent_Template_button_click_31_listener() {\n            return ctx.assignProjects();\n          });\n          i0.ɵɵtext(32, \" Assign Projects \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(33, \"h3\");\n          i0.ɵɵtext(34, \"Liste des projets affect\\u00E9s\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(35, \"table\", 21)(36, \"thead\", 22)(37, \"tr\")(38, \"th\");\n          i0.ɵɵtext(39, \"Nom d'utilisateur\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(40, \"th\");\n          i0.ɵɵtext(41, \"Nom du projet\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(42, \"th\");\n          i0.ɵɵtext(43, \"Date de d\\u00E9but\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(44, \"th\");\n          i0.ɵɵtext(45, \"Date de fin\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(46, \"th\");\n          i0.ɵɵtext(47, \"Actions\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(48, \"tbody\");\n          i0.ɵɵtemplate(49, AssignProjectsComponent_tr_49_Template, 16, 4, \"tr\", 23);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelement(50, \"p-toast\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"ngModel\", ctx.selectedUserId);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.users);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.selectedProjectIds);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.projects);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngModel\", ctx.startDate);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.endDate);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", !ctx.isFormValid());\n          i0.ɵɵadvance(18);\n          i0.ɵɵproperty(\"ngForOf\", ctx.allAssignments);\n        }\n      },\n      dependencies: [i5.NgForOf, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i6.DefaultValueAccessor, i6.SelectControlValueAccessor, i6.SelectMultipleControlValueAccessor, i6.NgControlStatus, i6.RequiredValidator, i6.NgModel, i7.Toast]\n    });\n  }\n  return AssignProjectsComponent;\n})();\nexport { AssignProjectsComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}