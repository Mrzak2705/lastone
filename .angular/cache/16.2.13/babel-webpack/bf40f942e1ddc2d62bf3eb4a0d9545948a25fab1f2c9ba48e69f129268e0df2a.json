{"ast":null,"code":"import { MessageService } from 'primeng/api'; // Pour les messages/toasts\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/project-assignment.service\";\nimport * as i2 from \"../_services/user.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"primeng/api\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"primeng/toast\";\nfunction AssignProjectsComponent_tr_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function AssignProjectsComponent_tr_24_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const assignment_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.openEditModal(assignment_r1));\n    });\n    i0.ɵɵelement(11, \"i\", 17);\n    i0.ɵɵtext(12, \" Modifier \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function AssignProjectsComponent_tr_24_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const assignment_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteAssignment(assignment_r1));\n    });\n    i0.ɵɵelement(14, \"i\", 19);\n    i0.ɵɵtext(15, \" Supprimer \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const assignment_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(assignment_r1.userName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(assignment_r1.projectName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(assignment_r1.startDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(assignment_r1.endDate);\n  }\n}\nlet AssignProjectsComponent = /*#__PURE__*/(() => {\n  class AssignProjectsComponent {\n    constructor(projectAssignmentService, userService, router, messageService // Pour les messages/toasts\n    ) {\n      this.projectAssignmentService = projectAssignmentService;\n      this.userService = userService;\n      this.router = router;\n      this.messageService = messageService;\n      // Propriétés pour stocker les utilisateurs, projets, et autres données\n      this.users = [];\n      this.projects = [];\n      this.selectedProjectIds = [];\n      this.toastMessage = ''; // Pour afficher des messages toast\n      this.allAssignments = [];\n      this.project = {};\n      this.selectedAssignment = null;\n      this.isEditModalOpen = false; // Pour contrôler la visibilité du modal\n      this.currentAssignment = null;\n    }\n    ngOnInit() {\n      // Charger les utilisateurs et gérer les erreurs\n      this.userService.getAllUsers().subscribe(response => {\n        this.users = response;\n      }, error => {\n        this.showError('Error fetching users', 'Please try again later.');\n      });\n      // Charger les projets et gérer les erreurs\n      this.userService.getAllProjects().subscribe(response => {\n        this.projects = response;\n      }, error => {\n        this.showError('Error fetching projects', 'Please try again later.');\n      });\n      this.loadAssignments();\n    }\n    assignProjects() {\n      console.log(\"Assigning projects:\", this.selectedUserId, this.selectedProjectIds, this.startDate, this.endDate); // Log les données avant l'envoi\n      this.projectAssignmentService.assignProjectsToUser(this.selectedUserId, this.selectedProjectIds, this.startDate, this.endDate).subscribe({\n        next: response => {\n          this.showSuccess(\"Projects assigned successfully!\");\n          this.router.navigate(['/affectation']);\n          this.loadAssignments();\n        },\n        error: error => {\n          console.error(\"Assign Projects Error:\", error); // Log l'erreur pour déboguer\n          this.showError('Error assigning projects', 'Please try again later.');\n        }\n      });\n    }\n    loadAssignments() {\n      this.projectAssignmentService.getAllAssignedProjects().subscribe(assignments => {\n        console.log(\"Loaded assignments:\", assignments); // Vérifiez ici si les objets contiennent des id\n        this.allAssignments = assignments;\n      }, error => {\n        console.error(\"Error loading assignments:\", error);\n      });\n    }\n    // Afficher un message toast de succès\n    showSuccess(message) {\n      this.messageService.add({\n        severity: 'success',\n        summary: 'Success',\n        detail: message\n      });\n    }\n    // Afficher un message toast d'erreur\n    showError(summary, detail) {\n      this.messageService.add({\n        severity: 'error',\n        summary,\n        detail\n      });\n    }\n    isFormValid() {\n      return this.selectedUserId !== undefined && this.selectedProjectIds.length > 0 && this.startDate !== undefined && this.endDate !== undefined; // Ajoutez des vérifications pour des valeurs valides\n    }\n    // Méthode pour supprimer un projet assigné\n    deleteAssignment(assignment) {\n      console.log(\"Assignment ID:\", assignment.projectName); // Vérifiez si l'identifiant est bien défini\n      if (assignment.id && confirm(\"Are you sure you want to delete assignment with ID: \" + assignment.id + \"?\")) {\n        this.projectAssignmentService.deleteAssignment(assignment.id).subscribe(response => {\n          console.log(\"Assignment deleted successfully\");\n          this.loadAssignments(); // Rechargez les assignments\n        }, error => {\n          console.error(\"Error deleting assignment:\", error);\n        });\n      } else {\n        console.error(\"Assignment ID is undefined, cannot delete.\");\n      }\n    }\n    // Ouvrir le modal de modification\n    openEditModal(assignment) {\n      this.currentAssignment = assignment; // Stocker l'assignation à modifier\n      this.isEditModalOpen = true; // Ouvrir le modal\n    }\n\n    updateAssignment() {\n      if (this.currentAssignment) {\n        this.projectAssignmentService.updateAssignment(this.currentAssignment.id, {\n          projectId: this.currentAssignment.projectId,\n          userId: this.currentAssignment.userId,\n          startDate: this.currentAssignment.startDate,\n          endDate: this.currentAssignment.endDate\n        }).subscribe(response => {\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Success',\n            detail: 'Assignment updated successfully!'\n          });\n          this.isEditModalOpen = false; // Fermer le modal\n          this.loadAssignments(); // Recharger les assignations\n        }, error => {\n          console.error(\"Error updating assignment:\", error);\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Error',\n            detail: 'Failed to update assignment.'\n          });\n        });\n      }\n    }\n    static #_ = this.ɵfac = function AssignProjectsComponent_Factory(t) {\n      return new (t || AssignProjectsComponent)(i0.ɵɵdirectiveInject(i1.ProjectAssignmentService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.MessageService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AssignProjectsComponent,\n      selectors: [[\"app-assign-projects\"]],\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 47,\n      vars: 7,\n      consts: [[1, \"container-fluid\", \"bg-light\", 2, \"padding\", \"20px\"], [1, \"card\", \"shadow-lg\", 2, \"background\", \"rgba(255, 255, 255, 0.85)\"], [1, \"card-body\"], [1, \"text-center\", \"text-warning\", \"mb-4\"], [1, \"text-center\"], [1, \"btn\", 2, \"background-color\", \"#ff7f00\", \"color\", \"white\", 3, \"disabled\", \"click\"], [1, \"table\", \"table-bordered\"], [1, \"thead-dark\"], [4, \"ngFor\", \"ngForOf\"], [\"header\", \"Update Assignment\", \"modal\", \"true\", 3, \"visible\", \"visibleChange\", \"onHide\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"number\", \"name\", \"projectId\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"fas\", \"fa-edit\"], [1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"fas\", \"fa-trash-alt\"]],\n      template: function AssignProjectsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\", 3);\n          i0.ɵɵtext(4, \"Assign Projects to a User\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function AssignProjectsComponent_Template_button_click_6_listener() {\n            return ctx.assignProjects();\n          });\n          i0.ɵɵtext(7, \" Assign Projects \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"h3\");\n          i0.ɵɵtext(9, \"Liste des projets affect\\u00E9s\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"table\", 6)(11, \"thead\", 7)(12, \"tr\")(13, \"th\");\n          i0.ɵɵtext(14, \"Nom d'utilisateur\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"th\");\n          i0.ɵɵtext(16, \"Nom du projet\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"th\");\n          i0.ɵɵtext(18, \"Date de d\\u00E9but\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"th\");\n          i0.ɵɵtext(20, \"Date de fin\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"th\");\n          i0.ɵɵtext(22, \"Actions\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(23, \"tbody\");\n          i0.ɵɵtemplate(24, AssignProjectsComponent_tr_24_Template, 16, 4, \"tr\", 8);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(25, \"p-dialog\", 9);\n          i0.ɵɵlistener(\"visibleChange\", function AssignProjectsComponent_Template_p_dialog_visibleChange_25_listener($event) {\n            return ctx.isEditModalOpen = $event;\n          })(\"onHide\", function AssignProjectsComponent_Template_p_dialog_onHide_25_listener() {\n            return ctx.isEditModalOpen = false;\n          });\n          i0.ɵɵelementStart(26, \"form\", 10);\n          i0.ɵɵlistener(\"ngSubmit\", function AssignProjectsComponent_Template_form_ngSubmit_26_listener() {\n            return ctx.updateAssignment();\n          });\n          i0.ɵɵelementStart(27, \"div\", 11)(28, \"label\");\n          i0.ɵɵtext(29, \"Project ID:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(30, \"input\", 12);\n          i0.ɵɵlistener(\"ngModelChange\", function AssignProjectsComponent_Template_input_ngModelChange_30_listener($event) {\n            return ctx.currentAssignment.projectId = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(31, \"div\", 11)(32, \"label\");\n          i0.ɵɵtext(33, \"User ID:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(34, \"input\", 13);\n          i0.ɵɵlistener(\"ngModelChange\", function AssignProjectsComponent_Template_input_ngModelChange_34_listener($event) {\n            return ctx.currentAssignment.userId = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(35, \"div\", 11)(36, \"label\");\n          i0.ɵɵtext(37, \"Start Date:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"input\", 14);\n          i0.ɵɵlistener(\"ngModelChange\", function AssignProjectsComponent_Template_input_ngModelChange_38_listener($event) {\n            return ctx.currentAssignment.startDate = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(39, \"div\", 11)(40, \"label\");\n          i0.ɵɵtext(41, \"End Date:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(42, \"input\", 14);\n          i0.ɵɵlistener(\"ngModelChange\", function AssignProjectsComponent_Template_input_ngModelChange_42_listener($event) {\n            return ctx.currentAssignment.endDate = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(43, \"div\", 4)(44, \"button\", 15);\n          i0.ɵɵtext(45, \"Update\");\n          i0.ɵɵelementEnd()()()()()();\n          i0.ɵɵelement(46, \"p-toast\");\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"disabled\", !ctx.isFormValid());\n          i0.ɵɵadvance(18);\n          i0.ɵɵproperty(\"ngForOf\", ctx.allAssignments);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"visible\", ctx.isEditModalOpen);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngModel\", ctx.currentAssignment.projectId);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.currentAssignment.userId);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.currentAssignment.startDate);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.currentAssignment.endDate);\n        }\n      },\n      dependencies: [i5.NgForOf, i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.NumberValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.RequiredValidator, i6.NgModel, i6.NgForm, i7.Toast]\n    });\n  }\n  return AssignProjectsComponent;\n})();\nexport { AssignProjectsComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}