{"ast":null,"code":"import { MessageService } from 'primeng/api'; // Pour afficher des toasts/messages\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/project-assignment.service\";\nimport * as i2 from \"../_services/user.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"primeng/api\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"primeng/toast\";\nlet AssignProjectsComponent = /*#__PURE__*/(() => {\n  class AssignProjectsComponent {\n    constructor(projectAssignmentService, userService, router, messageService // Pour afficher des toasts\n    ) {\n      this.projectAssignmentService = projectAssignmentService;\n      this.userService = userService;\n      this.router = router;\n      this.messageService = messageService;\n      this.users = [];\n      this.projects = [];\n      this.selectedProjectIds = [];\n    }\n    ngOnInit() {\n      // Charger les utilisateurs\n      this.userService.getAllUsers().subscribe(response => {\n        this.users = response;\n      }, error => {\n        this.showError('Error fetching users', 'Please try again later.');\n      });\n      // Charger les projets\n      this.userService.getAllProjects().subscribe(response => {\n        this.projects = response;\n      }, error => {\n        this.showError('Error fetching projects', 'Please try again later.');\n      });\n    }\n    assignProjects() {\n      if (!this.selectedUserId || this.selectedProjectIds.length === 0) {\n        this.showError('Invalid Input', 'Please select a user and at least one project.');\n        return;\n      }\n      /*const requestData = {\n        projectIds: this.selectedProjectIds,\n        startDate: this.startDate,\n        endDate: this.endDate,\n      };*/\n      this.projectAssignmentService.assignProjectsToUser(this.selectedUserId, this.selectedProjectIds, this.startDate, this.endDate).subscribe({\n        next: response => {\n          this.showSuccess('Projects Assigned', 'Projects have been assigned successfully.');\n          this.router.navigate(['/success']); // Naviguer vers une page de succès\n        },\n\n        error: error => {\n          this.showError('Error assigning projects', 'Please try again later.');\n        }\n      });\n    }\n    showSuccess(summary, detail) {\n      this.messageService.add({\n        severity: 'success',\n        summary,\n        detail\n      });\n    }\n    showError(summary, detail) {\n      this.messageService.add({\n        severity: 'error',\n        summary,\n        detail\n      });\n    }\n    static #_ = this.ɵfac = function AssignProjectsComponent_Factory(t) {\n      return new (t || AssignProjectsComponent)(i0.ɵɵdirectiveInject(i1.ProjectAssignmentService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.MessageService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AssignProjectsComponent,\n      selectors: [[\"app-assign-projects\"]],\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 24,\n      vars: 8,\n      consts: [[1, \"assign-projects-container\"], [1, \"p-fluid\", 3, \"ngSubmit\"], [\"projectAssignmentForm\", \"ngForm\"], [1, \"p-field\"], [\"for\", \"user\"], [\"name\", \"user\", \"optionLabel\", \"username\", \"optionValue\", \"id\", \"placeholder\", \"Select a user\", \"required\", \"\", 3, \"ngModel\", \"options\", \"showClear\", \"ngModelChange\"], [\"for\", \"projects\"], [\"name\", \"projects\", \"optionLabel\", \"nomProjet\", \"optionValue\", \"id\", \"placeholder\", \"Select projects\", \"required\", \"\", 3, \"ngModel\", \"options\", \"ngModelChange\"], [\"for\", \"startDate\"], [\"type\", \"date\", \"name\", \"startDate\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"endDate\"], [\"type\", \"date\", \"name\", \"endDate\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"pButton\", \"\", \"label\", \"Assign Projects\", \"icon\", \"pi pi-check\", 3, \"disabled\"]],\n      template: function AssignProjectsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Assign Projects to a User\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1, 2);\n          i0.ɵɵlistener(\"ngSubmit\", function AssignProjectsComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.assignProjects();\n          });\n          i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n          i0.ɵɵtext(7, \"Select User:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"p-dropdown\", 5);\n          i0.ɵɵlistener(\"ngModelChange\", function AssignProjectsComponent_Template_p_dropdown_ngModelChange_8_listener($event) {\n            return ctx.selectedUserId = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 6);\n          i0.ɵɵtext(11, \"Select Projects:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"p-multiSelect\", 7);\n          i0.ɵɵlistener(\"ngModelChange\", function AssignProjectsComponent_Template_p_multiSelect_ngModelChange_12_listener($event) {\n            return ctx.selectedProjectIds = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"div\", 3)(14, \"label\", 8);\n          i0.ɵɵtext(15, \"Start Date:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"input\", 9);\n          i0.ɵɵlistener(\"ngModelChange\", function AssignProjectsComponent_Template_input_ngModelChange_16_listener($event) {\n            return ctx.startDate = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(17, \"div\", 3)(18, \"label\", 10);\n          i0.ɵɵtext(19, \"End Date:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"input\", 11);\n          i0.ɵɵlistener(\"ngModelChange\", function AssignProjectsComponent_Template_input_ngModelChange_20_listener($event) {\n            return ctx.endDate = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(21, \"div\", 3);\n          i0.ɵɵelement(22, \"button\", 12);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(23, \"p-toast\");\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          const _r0 = i0.ɵɵreference(4);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngModel\", ctx.selectedUserId)(\"options\", ctx.users)(\"showClear\", true);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.selectedProjectIds)(\"options\", ctx.projects);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.startDate);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.endDate);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", !_r0.form.valid);\n        }\n      },\n      dependencies: [i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm, i6.Toast]\n    });\n  }\n  return AssignProjectsComponent;\n})();\nexport { AssignProjectsComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}