{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\nlet TokenStorageService = /*#__PURE__*/(() => {\n  class TokenStorageService {\n    constructor() {\n      this.isLoggedIn = new BehaviorSubject(false);\n      this.isLoggedIn$ = this.isLoggedIn.asObservable();\n      this.isLoggedIn.next(!!this.getToken()); // Mettre à jour lors de l'initialisation\n    }\n\n    signOut() {\n      window.sessionStorage.clear();\n      this.isLoggedIn.next(false); // Informer les abonnés de la déconnexion\n    }\n\n    saveToken(token) {\n      window.sessionStorage.removeItem('auth-token');\n      window.sessionStorage.setItem('auth-token', token);\n      this.isLoggedIn.next(true); // Informer les abonnés de la connexion\n    }\n\n    getToken() {\n      return sessionStorage.getItem('auth-token');\n    }\n    saveUser(user) {\n      window.sessionStorage.removeItem(USER_KEY);\n      window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n    }\n    getUser() {\n      return JSON.parse(sessionStorage.getItem(USER_KEY));\n    }\n    static #_ = this.ɵfac = function TokenStorageService_Factory(t) {\n      return new (t || TokenStorageService)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TokenStorageService,\n      factory: TokenStorageService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return TokenStorageService;\n})();\nexport { TokenStorageService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}